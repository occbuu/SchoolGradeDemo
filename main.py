# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'main.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QMessageBox
import json
import math
import os.path
import filter
import  reportDialog
import re


class Ui_mainDialog(object):
    def setupUi(self, mainDialog):
        mainDialog.setObjectName("mainDialog")
        mainDialog.resize(1106, 561)
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap("school.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        mainDialog.setWindowIcon(icon)
        mainDialog.setLayoutDirection(QtCore.Qt.RightToLeft)
        mainDialog.setAutoFillBackground(True)
        self.currentStudent = None
        self.data = []
        self.studentPicturePath = ""
        self.label = QtWidgets.QLabel(mainDialog)
        self.label.setGeometry(QtCore.QRect(20, 10, 131, 131))
        self.label.setText("")
        self.label.setPixmap(QtGui.QPixmap("python-icon.png"))
        self.label.setScaledContents(True)
        self.label.setObjectName("label")
        self.label_2 = QtWidgets.QLabel(mainDialog)
        self.label_2.setGeometry(QtCore.QRect(170, 10, 751, 121))
        font = QtGui.QFont()
        font.setFamily("VNI-Univer")
        font.setPointSize(51)
        font.setBold(True)
        font.setItalic(True)
        font.setUnderline(False)
        font.setWeight(75)
        font.setStrikeOut(False)
        self.label_2.setFont(font)
        self.label_2.setObjectName("label_2")
        self.frame = QtWidgets.QFrame(mainDialog)
        self.frame.setGeometry(QtCore.QRect(20, 140, 901, 201))
        self.frame.setFrameShape(QtWidgets.QFrame.Box)
        self.frame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame.setObjectName("frame")
        self.label_3 = QtWidgets.QLabel(self.frame)
        self.label_3.setGeometry(QtCore.QRect(0, 20, 61, 21))
        font = QtGui.QFont()
        font.setPointSize(11)
        self.label_3.setFont(font)
        self.label_3.setAlignment(QtCore.Qt.AlignRight | QtCore.Qt.AlignTrailing | QtCore.Qt.AlignVCenter)
        self.label_3.setObjectName("label_3")
        self.txtStudentID = QtWidgets.QLineEdit(self.frame)
        self.txtStudentID.setGeometry(QtCore.QRect(70, 10, 241, 31))
        font = QtGui.QFont()
        font.setPointSize(11)
        self.txtStudentID.setFont(font)
        self.txtStudentID.setObjectName("txtStudentID")
        self.txtEmail = QtWidgets.QLineEdit(self.frame)
        self.txtEmail.setGeometry(QtCore.QRect(70, 110, 281, 31))
        font = QtGui.QFont()
        font.setPointSize(11)
        self.txtEmail.setFont(font)
        self.txtEmail.setObjectName("txtEmail")
        self.label_4 = QtWidgets.QLabel(self.frame)
        self.label_4.setGeometry(QtCore.QRect(0, 120, 61, 21))
        font = QtGui.QFont()
        font.setPointSize(11)
        self.label_4.setFont(font)
        self.label_4.setAlignment(QtCore.Qt.AlignRight | QtCore.Qt.AlignTrailing | QtCore.Qt.AlignVCenter)
        self.label_4.setObjectName("label_4")
        self.txtPhone = QtWidgets.QLineEdit(self.frame)
        self.txtPhone.setGeometry(QtCore.QRect(70, 160, 281, 31))
        font = QtGui.QFont()
        font.setPointSize(11)
        self.txtPhone.setFont(font)
        self.txtPhone.setText("")
        self.txtPhone.setObjectName("txtPhone")
        self.label_5 = QtWidgets.QLabel(self.frame)
        self.label_5.setGeometry(QtCore.QRect(0, 170, 61, 21))
        font = QtGui.QFont()
        font.setPointSize(11)
        self.label_5.setFont(font)
        self.label_5.setAlignment(QtCore.Qt.AlignRight | QtCore.Qt.AlignTrailing | QtCore.Qt.AlignVCenter)
        self.label_5.setObjectName("label_5")
        self.label_6 = QtWidgets.QLabel(self.frame)
        self.label_6.setGeometry(QtCore.QRect(0, 70, 61, 21))
        font = QtGui.QFont()
        font.setPointSize(11)
        self.label_6.setFont(font)
        self.label_6.setAlignment(QtCore.Qt.AlignRight | QtCore.Qt.AlignTrailing | QtCore.Qt.AlignVCenter)
        self.label_6.setObjectName("label_6")
        self.cboClass = QtWidgets.QComboBox(self.frame)
        self.cboClass.setGeometry(QtCore.QRect(70, 60, 281, 31))
        font = QtGui.QFont()
        font.setPointSize(11)
        self.cboClass.setFont(font)
        self.cboClass.setObjectName("cboClass")
        self.btnSearch = QtWidgets.QPushButton(self.frame)
        self.btnSearch.setGeometry(QtCore.QRect(322, 10, 31, 31))
        self.btnSearch.setText("")
        icon1 = QtGui.QIcon()
        icon1.addPixmap(QtGui.QPixmap("find-icon.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.btnSearch.setIcon(icon1)
        self.btnSearch.setObjectName("btnSearch")
        self.label_7 = QtWidgets.QLabel(self.frame)
        self.label_7.setGeometry(QtCore.QRect(380, 20, 61, 21))
        font = QtGui.QFont()
        font.setPointSize(11)
        self.label_7.setFont(font)
        self.label_7.setAlignment(QtCore.Qt.AlignLeading | QtCore.Qt.AlignLeft | QtCore.Qt.AlignVCenter)
        self.label_7.setObjectName("label_7")
        self.txtName = QtWidgets.QLineEdit(self.frame)
        self.txtName.setGeometry(QtCore.QRect(450, 10, 241, 31))
        font = QtGui.QFont()
        font.setPointSize(11)
        self.txtName.setFont(font)
        self.txtName.setObjectName("txtName")
        self.label_8 = QtWidgets.QLabel(self.frame)
        self.label_8.setGeometry(QtCore.QRect(380, 70, 61, 21))
        font = QtGui.QFont()
        font.setPointSize(11)
        self.label_8.setFont(font)
        self.label_8.setAlignment(QtCore.Qt.AlignLeading | QtCore.Qt.AlignLeft | QtCore.Qt.AlignVCenter)
        self.label_8.setObjectName("label_8")
        self.radioMale = QtWidgets.QRadioButton(self.frame)
        self.radioMale.setGeometry(QtCore.QRect(460, 70, 81, 20))
        font = QtGui.QFont()
        font.setPointSize(11)
        self.radioMale.setFont(font)
        self.radioMale.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.radioMale.setChecked(True)
        self.radioMale.setObjectName("radioMale")
        self.radioFemale = QtWidgets.QRadioButton(self.frame)
        self.radioFemale.setGeometry(QtCore.QRect(540, 70, 81, 20))
        font = QtGui.QFont()
        font.setPointSize(11)
        self.radioFemale.setFont(font)
        self.radioFemale.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.radioFemale.setObjectName("radioFemale")
        self.label_9 = QtWidgets.QLabel(self.frame)
        self.label_9.setGeometry(QtCore.QRect(380, 110, 131, 61))
        font = QtGui.QFont()
        font.setPointSize(11)
        self.label_9.setFont(font)
        self.label_9.setLineWidth(1)
        self.label_9.setTextFormat(QtCore.Qt.AutoText)
        self.label_9.setScaledContents(False)
        self.label_9.setAlignment(QtCore.Qt.AlignLeading | QtCore.Qt.AlignLeft | QtCore.Qt.AlignVCenter)
        self.label_9.setWordWrap(True)
        self.label_9.setObjectName("label_9")
        self.chkEmail = QtWidgets.QCheckBox(self.frame)
        self.chkEmail.setGeometry(QtCore.QRect(530, 120, 111, 20))
        font = QtGui.QFont()
        font.setPointSize(11)
        self.chkEmail.setFont(font)
        self.chkEmail.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.chkEmail.setObjectName("chkEmail")
        self.chkSMS = QtWidgets.QCheckBox(self.frame)
        self.chkSMS.setGeometry(QtCore.QRect(530, 160, 111, 20))
        font = QtGui.QFont()
        font.setPointSize(11)
        self.chkSMS.setFont(font)
        self.chkSMS.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.chkSMS.setObjectName("chkSMS")
        self.lblIMG = QtWidgets.QLabel(self.frame)
        self.lblIMG.setGeometry(QtCore.QRect(710, 10, 181, 181))
        self.lblIMG.setAutoFillBackground(True)
        self.lblIMG.setFrameShape(QtWidgets.QFrame.Box)
        self.lblIMG.setText("")
        self.lblIMG.setScaledContents(True)
        self.lblIMG.setObjectName("lblIMG")
        self.btnIMG = QtWidgets.QPushButton(self.frame)
        self.btnIMG.setGeometry(QtCore.QRect(860, 160, 31, 28))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.btnIMG.setFont(font)
        self.btnIMG.setObjectName("btnIMG")
        self.frame_2 = QtWidgets.QFrame(mainDialog)
        self.frame_2.setGeometry(QtCore.QRect(20, 350, 901, 151))
        self.frame_2.setFrameShape(QtWidgets.QFrame.Box)
        self.frame_2.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_2.setObjectName("frame_2")
        self.label_10 = QtWidgets.QLabel(self.frame_2)
        self.label_10.setGeometry(QtCore.QRect(60, 30, 61, 21))
        font = QtGui.QFont()
        font.setPointSize(11)
        self.label_10.setFont(font)
        self.label_10.setAlignment(QtCore.Qt.AlignRight | QtCore.Qt.AlignTrailing | QtCore.Qt.AlignVCenter)
        self.label_10.setObjectName("label_10")
        self.txtEnglish = QtWidgets.QLineEdit(self.frame_2)
        self.txtEnglish.setGeometry(QtCore.QRect(130, 20, 281, 31))
        font = QtGui.QFont()
        font.setPointSize(11)
        self.txtEnglish.setFont(font)
        self.txtEnglish.setText("")
        self.txtEnglish.setObjectName("txtEnglish")
        self.label_11 = QtWidgets.QLabel(self.frame_2)
        self.label_11.setGeometry(QtCore.QRect(60, 70, 61, 21))
        font = QtGui.QFont()
        font.setPointSize(11)
        self.label_11.setFont(font)
        self.label_11.setAlignment(QtCore.Qt.AlignRight | QtCore.Qt.AlignTrailing | QtCore.Qt.AlignVCenter)
        self.label_11.setObjectName("label_11")
        self.txtScience = QtWidgets.QLineEdit(self.frame_2)
        self.txtScience.setGeometry(QtCore.QRect(130, 60, 281, 31))
        font = QtGui.QFont()
        font.setPointSize(11)
        self.txtScience.setFont(font)
        self.txtScience.setText("")
        self.txtScience.setObjectName("txtScience")
        self.label_12 = QtWidgets.QLabel(self.frame_2)
        self.label_12.setGeometry(QtCore.QRect(60, 110, 61, 21))
        font = QtGui.QFont()
        font.setPointSize(11)
        self.label_12.setFont(font)
        self.label_12.setAlignment(QtCore.Qt.AlignRight | QtCore.Qt.AlignTrailing | QtCore.Qt.AlignVCenter)
        self.label_12.setObjectName("label_12")
        self.txtMath = QtWidgets.QLineEdit(self.frame_2)
        self.txtMath.setGeometry(QtCore.QRect(130, 100, 281, 31))
        font = QtGui.QFont()
        font.setPointSize(11)
        self.txtMath.setFont(font)
        self.txtMath.setText("")
        self.txtMath.setObjectName("txtMath")
        self.txtHistory = QtWidgets.QLineEdit(self.frame_2)
        self.txtHistory.setGeometry(QtCore.QRect(570, 60, 281, 31))
        font = QtGui.QFont()
        font.setPointSize(11)
        self.txtHistory.setFont(font)
        self.txtHistory.setText("")
        self.txtHistory.setObjectName("txtHistory")
        self.label_13 = QtWidgets.QLabel(self.frame_2)
        self.label_13.setGeometry(QtCore.QRect(500, 30, 61, 21))
        font = QtGui.QFont()
        font.setPointSize(11)
        self.label_13.setFont(font)
        self.label_13.setAlignment(QtCore.Qt.AlignRight | QtCore.Qt.AlignTrailing | QtCore.Qt.AlignVCenter)
        self.label_13.setObjectName("label_13")
        self.txtArt = QtWidgets.QLineEdit(self.frame_2)
        self.txtArt.setGeometry(QtCore.QRect(570, 20, 281, 31))
        font = QtGui.QFont()
        font.setPointSize(11)
        self.txtArt.setFont(font)
        self.txtArt.setText("")
        self.txtArt.setObjectName("txtArt")
        self.txtMusic = QtWidgets.QLineEdit(self.frame_2)
        self.txtMusic.setGeometry(QtCore.QRect(570, 100, 281, 31))
        font = QtGui.QFont()
        font.setPointSize(11)
        self.txtMusic.setFont(font)
        self.txtMusic.setText("")
        self.txtMusic.setObjectName("txtMusic")
        self.label_14 = QtWidgets.QLabel(self.frame_2)
        self.label_14.setGeometry(QtCore.QRect(500, 70, 61, 21))
        font = QtGui.QFont()
        font.setPointSize(11)
        self.label_14.setFont(font)
        self.label_14.setAlignment(QtCore.Qt.AlignRight | QtCore.Qt.AlignTrailing | QtCore.Qt.AlignVCenter)
        self.label_14.setObjectName("label_14")
        self.label_15 = QtWidgets.QLabel(self.frame_2)
        self.label_15.setGeometry(QtCore.QRect(500, 110, 61, 21))
        font = QtGui.QFont()
        font.setPointSize(11)
        self.label_15.setFont(font)
        self.label_15.setAlignment(QtCore.Qt.AlignRight | QtCore.Qt.AlignTrailing | QtCore.Qt.AlignVCenter)
        self.label_15.setObjectName("label_15")
        self.btnAdd = QtWidgets.QPushButton(mainDialog)
        self.btnAdd.setGeometry(QtCore.QRect(20, 510, 121, 41))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.btnAdd.setFont(font)
        self.btnAdd.setObjectName("btnAdd")
        self.btnUpdate = QtWidgets.QPushButton(mainDialog)
        self.btnUpdate.setGeometry(QtCore.QRect(150, 510, 141, 41))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.btnUpdate.setFont(font)
        self.btnUpdate.setObjectName("btnUpdate")
        self.btnDelete = QtWidgets.QPushButton(mainDialog)
        self.btnDelete.setGeometry(QtCore.QRect(300, 510, 141, 41))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.btnDelete.setFont(font)
        self.btnDelete.setObjectName("btnDelete")
        self.btnFilter = QtWidgets.QPushButton(mainDialog)
        self.btnFilter.setGeometry(QtCore.QRect(480, 510, 141, 41))
        font = QtGui.QFont()
        font.setPointSize(11)
        self.btnFilter.setFont(font)
        self.btnFilter.setObjectName("btnFilter")
        self.btnReport = QtWidgets.QPushButton(mainDialog)
        self.btnReport.setGeometry(QtCore.QRect(630, 510, 141, 41))
        font = QtGui.QFont()
        font.setPointSize(11)
        self.btnReport.setFont(font)
        self.btnReport.setObjectName("btnReport")
        self.btnClear = QtWidgets.QPushButton(mainDialog)
        self.btnClear.setGeometry(QtCore.QRect(780, 510, 141, 41))
        font = QtGui.QFont()
        font.setPointSize(11)
        self.btnClear.setFont(font)
        self.btnClear.setObjectName("btnClear")
        ####
        self.studentPicturePath =""
        self.btnIMG.clicked.connect(self.selectStPicture_callback)
        self.btnSearch.clicked.connect(self.loadStudent)
        ####
        self.btnAdd.clicked.connect(self.addStudent)
        ####
        self.btnUpdate.clicked.connect(self.updateStudent)
        ####
        self.btnDelete.clicked.connect(self.deleteStudent)
        ####
        self.btnFilter.clicked.connect(self.filter)
        ####
        self.btnReport.clicked.connect(self.report)
        ####
        self.btnClear.clicked.connect(self.clear)
        ####
        self.addClassNameToComboBox()
        ####
        self.retranslateUi(mainDialog)
        QtCore.QMetaObject.connectSlotsByName(mainDialog)

    def retranslateUi(self, mainDialog):
        _translate = QtCore.QCoreApplication.translate
        mainDialog.setWindowTitle(_translate("mainDialog", "School Grade System"))
        self.label_2.setText(_translate("mainDialog", "School Grade System"))
        self.label_3.setText(_translate("mainDialog", "SID:"))
        self.label_4.setText(_translate("mainDialog", "Email:"))
        self.label_5.setText(_translate("mainDialog", "Phone:"))
        self.label_6.setText(_translate("mainDialog", "Class:"))
        self.label_7.setText(_translate("mainDialog", "Name:"))
        self.label_8.setText(_translate("mainDialog", "Gender:"))
        self.radioMale.setText(_translate("mainDialog", "Male"))
        self.radioFemale.setText(_translate("mainDialog", "Female"))
        self.label_9.setText(_translate("mainDialog", "Recieve school notification by:"))
        self.chkEmail.setText(_translate("mainDialog", "Email"))
        self.chkSMS.setText(_translate("mainDialog", "SMS"))
        self.btnIMG.setText(_translate("mainDialog", "..."))
        self.label_10.setText(_translate("mainDialog", "English"))
        self.label_11.setText(_translate("mainDialog", "Science"))
        self.label_12.setText(_translate("mainDialog", "Math"))
        self.label_13.setText(_translate("mainDialog", "Art"))
        self.label_14.setText(_translate("mainDialog", "History"))
        self.label_15.setText(_translate("mainDialog", "Music"))
        self.btnAdd.setText(_translate("mainDialog", "Add Student"))
        self.btnUpdate.setText(_translate("mainDialog", "Update Student"))
        self.btnDelete.setText(_translate("mainDialog", "Delete Student"))
        self.btnFilter.setText(_translate("mainDialog", "Filter"))
        self.btnReport.setText(_translate("mainDialog", "Report"))
        self.btnClear.setText(_translate("mainDialog", "Clear"))

    def addClassNameToComboBox(self):
        with open("classes.json",'r', encoding= 'utf-8') as f:
            lst = json.load(f)
            self.cboClass.addItems(lst)

    def selectStPicture_callback(self):
        file, check = QtWidgets.QFileDialog.getOpenFileNames(None,"Select an Image",
                                                             "", "Image Files (*.bmp *.png *.jpg)")
        if check:
            self.studentPicturePath = file[0]
            pixmap = QtGui.QPixmap(file[0])
            pixmap = pixmap.scaled(self.lblIMG.width(),self.lblIMG.height())
            self.lblIMG.setPixmap(pixmap)

    def loadAllStudent(self):
        self.data = []
        with open('students.json','r',encoding= 'utf-8') as f:
            if os.stat('students.json').st_size != 0:
                self.data = json.load(f)

    def checkStudent(self):
        id = self.txtStudentID.text()
        self.loadAllStudent()
        self.currentStudent = None
        for i in self.data:
            if i["studentID"] == id:
                return True
        return None

    def loadStudent(self):
        if self.txtStudentID.isEnabled() == False:
            self.txtStudentID.setEnabled(True)
            return
        id = self.txtStudentID.text()
        self.loadAllStudent()
        self.currentStudent = None
        for i in self.data:
            if i["studentID"] == id:
                self.currentStudent = i
                break
        if self.currentStudent != None:
            st = self.currentStudent
            #self.txtStudentID.setText(st["studentID"])
            self.cboClass.setCurrentText(st["class"])
            self.txtName.setText(st["name"])
            self.txtEmail.setText(st["email"])
            self.txtPhone.setText(st["phone"])
            if st["gender"]:
                self.radioMale.setChecked(True)
            else:
                self.radioFemale.setChecked(True)
            notify = st["notifyBy"]
            for i in notify:
                if i =="Email":
                    self.chkEmail.setChecked(True)
                elif i=="SMS":
                    self.chkSMS.setChecked(True)
            self.txtEnglish.setText(str(st["english"]))
            self.txtScience.setText(str(st["science"]))
            self.txtMath.setText(str(st["math"]))
            self.txtArt.setText(str(st["art"]))
            self.txtHistory.setText(str(st["history"]))
            self.txtMusic.setText(str(st["music"]))
            if st["imagePath"] != "" and st["imagePath"] != None:
                self.studentPicturePath = st["imagePath"]
                pixmap = QtGui.QPixmap(st["imagePath"])
                pixmap = pixmap.scaled(self.lblIMG.width(), self.lblIMG.height())
                self.lblIMG.setPixmap(pixmap)
            self.txtStudentID.setEnabled(False)
        else:
            self.txtStudentID.setEnabled(True)
            self.currentStudent = None
            self.txtName.clear()
            self.txtArt.clear()
            self.txtMath.clear()
            self.txtMusic.clear()
            self.txtHistory.clear()
            self.txtScience.clear()
            self.txtEnglish.clear()
            self.txtPhone.clear()
            self.txtEmail.clear()
            self.chkSMS.setChecked(False)
            self.chkEmail.setChecked(False)
            self.lblIMG.clear()
            self.studentPicturePath = ""


    def checkInsertStudent(self):
        s = ""
        if self.txtStudentID.text().strip() == "":
            s +="Vui lòng nhập Student ID !!! \n"
        if self.txtName.text().strip() == "":
            s += "Vui lòng nhập Tên Student !!! \n"
        if self.isValidEmail(self.txtEmail.text()) == False:
            s += "Email chưa đúng định dạng!!! \n"
        if self.isValidPhone(self.txtPhone.text()) == False:
            s += "Phone chưa đúng định dạng!!! \n"
        if self.is_numeric(self.txtEnglish.text()) == False:
            s += "Điểm môn English chưa đúng định dạng!!! \n"
        if self.is_numeric(self.txtScience.text()) == False:
            s += "Điểm môn Science chưa đúng định dạng!!! \n"
        if self.is_numeric(self.txtMath.text()) == False:
            s += "Điểm môn Math chưa đúng định dạng!!! \n"
        if self.is_numeric(self.txtArt.text()) == False:
            s += "Điểm môn Art chưa đúng định dạng!!! \n"
        if self.is_numeric(self.txtHistory.text()) == False:
            s += "Điểm môn History chưa đúng định dạng!!! \n"
        if self.is_numeric(self.txtMusic.text()) == False:
            s += "Điểm môn Music chưa đúng định dạng!!! \n"
        if self.chkSMS.isChecked()==False and self.chkEmail.isChecked() ==False:
            s += "Chưa chọn hình thức nhận thông báo!!! \n"
        return s

    def addStudent(self):
        if self.checkStudent() != None:
            msg = QMessageBox()
            msg.setIcon(QMessageBox.Warning)
            msg.setText("Mã số sv này đã tồn tại ! ")
            msg.setWindowTitle("Thông báo !!")
            msg.setStandardButtons(QMessageBox.Ok)
            msg.exec_()
        else:
            s = self.checkInsertStudent()
            if s!="":
                msg = QMessageBox()
                msg.setIcon(QMessageBox.Warning)
                msg.setText(s)
                msg.setWindowTitle("Thêm mới Student !!")
                msg.setStandardButtons(QMessageBox.Ok)
                msg.exec_()
            else:
                gen = True
                if self.radioMale.isChecked() == False:
                    gen = False
                notify = []
                if self.chkEmail.isChecked():
                    notify.append("Email")
                if self.chkSMS.isChecked():
                    notify.append("SMS")
                gpa = (float(self.txtEnglish.text()) \
                      + float(self.txtArt.text()) \
                      + float(self.txtMusic.text()) \
                      + float(self.txtMath.text()) \
                      + float(self.txtScience.text()) \
                      + float(self.txtHistory.text()) ) / 6
                st = {
                    "studentID": self.txtStudentID.text(),
                    "class": self.cboClass.currentText(),
                    "name": self.txtName.text(),
                    "email": self.txtEmail.text(),
                    "phone": self.txtPhone.text(),
                    "gender": gen,
                    "notifyBy": notify,
                    "english": float(self.txtEnglish.text()),
                    "science":  float(self.txtScience.text()),
                    "math":  float(self.txtMath.text()),
                    "art":  float(self.txtArt.text()),
                    "history":  float(self.txtHistory.text()),
                    "music":  float(self.txtMusic.text()),
                    "gpa": gpa,
                    "imagePath": self.studentPicturePath
                }
                self.loadAllStudent()
                self.data.append(st)
                with open('students.json', 'w', encoding='utf-8') as f:
                    json.dump(self.data,f)
                msg = QMessageBox()
                msg.setIcon(QMessageBox.Information)
                msg.setText("Đã thêm thành công SV vào JSON ! ")
                msg.setWindowTitle("Thông báo !!")
                msg.setStandardButtons(QMessageBox.Ok)
                msg.exec_()

    def updateStudent(self):
        if self.currentStudent == None:
            msg = QMessageBox()
            msg.setIcon(QMessageBox.Warning)
            msg.setText("Chưa có sv để cập nhật ! ")
            msg.setWindowTitle("Thông báo !!")
            msg.setStandardButtons(QMessageBox.Ok)
            msg.exec_()
        else:
            s = self.checkInsertStudent()
            if s != "":
                msg = QMessageBox()
                msg.setIcon(QMessageBox.Warning)
                msg.setText(s)
                msg.setWindowTitle("Cập nhật Student !!")
                msg.setStandardButtons(QMessageBox.Ok)
                msg.exec_()
            else:
                gen = True
                if self.radioMale.isChecked() == False:
                    gen = False
                notify = []
                if self.chkEmail.isChecked():
                    notify.append("Email")
                if self.chkSMS.isChecked():
                    notify.append("SMS")
                gpa = (float(self.txtEnglish.text()) \
                       + float(self.txtArt.text()) \
                       + float(self.txtMusic.text()) \
                       + float(self.txtMath.text()) \
                       + float(self.txtScience.text()) \
                       + float(self.txtHistory.text())) / 6
                st = {
                    "studentID": self.txtStudentID.text(),
                    "class": self.cboClass.currentText(),
                    "name": self.txtName.text(),
                    "email": self.txtEmail.text(),
                    "phone": self.txtPhone.text(),
                    "gender": gen,
                    "notifyBy": notify,
                    "english": float(self.txtEnglish.text()),
                    "science": float(self.txtScience.text()),
                    "math": float(self.txtMath.text()),
                    "art": float(self.txtArt.text()),
                    "history": float(self.txtHistory.text()),
                    "music": float(self.txtMusic.text()),
                    "gpa": gpa,
                    "imagePath": self.studentPicturePath
                }
                self.loadAllStudent()
                i = 0
                for i in range(len(self.data)):
                    if self.data[i]["studentID"] == st ["studentID"]:
                        break;
                chkDif = self.checkDifference(self.data[i], st)
                if chkDif:
                    self.data[i] = st
                    with open('students.json', 'w', encoding='utf-8') as f:
                        json.dump(self.data, f)
                    msg = QMessageBox()
                    msg.setIcon(QMessageBox.Information)
                    msg.setText("Cập nhật thành công SV vào JSON ! ")
                    msg.setWindowTitle("Thông báo !!")
                    msg.setStandardButtons(QMessageBox.Ok)
                    msg.exec_()
                else:
                    msg = QMessageBox()
                    msg.setIcon(QMessageBox.Warning)
                    msg.setText("Không có gì thay đổi để cập nhật ! ")
                    msg.setWindowTitle("Thông báo !!")
                    msg.setStandardButtons(QMessageBox.Ok)
                    msg.exec_()
    @staticmethod
    def checkDifference(a,b):
        if a["class"] != b["class"]:
            return True
        if a["name"] != b["name"]:
            return True
        if a["email"] != b["email"]:
            return True
        if a["phone"] != b["phone"]:
            return True
        if a["gender"] != b["gender"]:
            return True
        if a["notifyBy"] != b["notifyBy"]:
            return True
        if a["art"] != b["art"]:
            return True
        if a["math"] != b["math"]:
            return True
        if a["science"] != b["science"]:
            return True
        if a["music"] != b["music"]:
            return True
        if a["history"] != b["history"]:
            return True
        if a["english"] != b["english"]:
            return True
        if a["imagePath"] != b["imagePath"]:
            return True
        return False

    def deleteStudent(self):
        if self.checkStudent() != None:
            msg = QMessageBox()
            msg.setIcon(QMessageBox.Warning)
            msg.setText("Bạn có chắc chắn xóa SV này không? ")
            msg.setWindowTitle("Thông báo !!")
            msg.setStandardButtons(QMessageBox.Ok | QMessageBox.Cancel)
            rval = msg.exec_()
            if rval == 1024: # OK
                #print("OKKKKKKKOKOKOKOKO")
                self.loadAllStudent()
                i = 0
                for i in range(len(self.data)):
                    if self.data[i]["studentID"] == self.txtStudentID.text():
                        break;
                self.data.pop(i)
                with open('students.json', 'w', encoding='utf-8') as f:
                    json.dump(self.data, f)
                msg = QMessageBox()
                msg.setIcon(QMessageBox.Information)
                msg.setText("Cập nhật thành công SV vào JSON ! ")
                msg.setWindowTitle("Thông báo !!")
                msg.setStandardButtons(QMessageBox.Ok)
                msg.exec_()
                self.clear()
        else:
            msg = QMessageBox()
            msg.setIcon(QMessageBox.Warning)
            msg.setText("Chưa có sv để Xóa ! ")
            msg.setWindowTitle("Thông báo !!")
            msg.setStandardButtons(QMessageBox.Ok)
            msg.exec_()

    def filter(self):
        filterDialog = QtWidgets.QDialog()
        filterUi = filter.Ui_filterDialog()
        filterUi.setupUi(filterDialog)
        filterDialog.show()
        filterDialog.exec_()
        pass

    def report(self):
        rptDialog = QtWidgets.QDialog()
        rptUi = reportDialog.Ui_RptDialog()
        rptUi.setupUi(rptDialog)
        rptDialog.show()
        rptDialog.exec_()
        pass

    def clear(self):
        self.currentStudent = None
        self.txtStudentID.clear()
        self.txtName.clear()
        self.txtArt.clear()
        self.txtMath.clear()
        self.txtMusic.clear()
        self.txtHistory.clear()
        self.txtScience.clear()
        self.txtEnglish.clear()
        self.txtPhone.clear()
        self.txtEmail.clear()
        self.chkSMS.setChecked(False)
        self.chkEmail.setChecked(False)
        self.lblIMG.clear()
        self.studentPicturePath = ""
        pass

    @staticmethod
    def isValidEmail(email):
        regex = r'\b[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\.[A-Z|a-z]{2,7}\b'
        if (re.fullmatch(regex, email)):
            return  True
        else:
            return False

    @staticmethod
    def isValidPhone(phone):
        regex = "^\\+?[1-9][0-9]{7,14}$"
        if (re.fullmatch(regex, phone)):
            return True
        else:
            return False

    @staticmethod
    def is_numeric(x):
        return x.replace('.', '', 1).replace('-', '', 1).isdigit()

if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    mainDialog = QtWidgets.QDialog()
    ui = Ui_mainDialog()
    ui.setupUi(mainDialog)
    mainDialog.show()
    sys.exit(app.exec_())
